@startuml
class ExpenseController {
    + ExpenseController(context:DBContext)
    + <<async>> All() : Task<ActionResult<string>>
    + <<async>> Get(id:string) : Task<ActionResult<string>>
    + <<async>> Create(template:Expense) : Task<ActionResult<string>>
    + <<async>> Update(id:string, template:Expense) : Task<ActionResult<string>>
    + <<async>> UpdateAndFetchAll(id:string, template:Expense) : Task<ActionResult<string>>
    + <<async>> Delete(id:string) : Task<ActionResult<string>>
    + Exists(id:string) : bool
    + Settings() : string
}
class "IUserInterfaceCRUD`1"<T> {
}
class "GenericRepository`1"<T> {
}
ControllerBase <|-- ExpenseController
"IUserInterfaceCRUD`1" "<Expense>" <|-- ExpenseController
ExpenseController --> "EmployeeRepository<Employee>" "GenericRepository`1"
ExpenseController --> "ExpenseRepository<Expense>" "GenericRepository`1"
ExpenseController --> "ProjectRepository<Project>" "GenericRepository`1"
ExpenseController --> "FileRepository" FileRepository
ExpenseController o-> "settings" JsonSerializerSettings
@enduml
